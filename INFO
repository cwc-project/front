+ отправка формы регистрации при нажатии enter
+ auth_token - camel case
+ на github обновление страниц
+ где д.б. nojekyll только локально или в папке dist //в dist

+ в lint-staged добавить test при npm build (посмотреть back)
- название сайта - ссылка Link на projects для зарегистрированных
+ приватные Route (страница projects доступна только залогиненному пользователю)
- запуск всех тестов при build, еще раз продумать коцепцию build
+ logout при закрытии вкладки // не нужен, т.к. нет механизма сессий
+ залогиненый пользователь не получает начальной страницы
или ( контент на главной в зависимости от того залогинен пользователь или нет,
если нет, то стандартный контент,если залогинент, то кнопка projects - вариант без кувшкусе)
+ убрать redux-logger на production (webpack define plugin)
+ автоматическую замену env при npm run build (webpack define plugin) - реализована астоматическая замена сервера
- mainfest webpack plugin
- отптимизация (code Splitting, lazy loading)
- сжимать html файлы
- свой домен cname ?
+ добавить breadcrumbs projects -> Название проекта // добавил просто ссылку на проекты
()


- посмотреть как происходит доступ к токену в actions

+ Project и projects перенести жизненный цикл компонента в компоненты


Ошибки:

одновременно может быть несколько ошибок, например в regForm 
поэтому нужно использовать state
отдельно задать err Actions

Fetch
- одновременно может быть только один запрос fetch,
т.ч. можно сделать отдельный обработчик

-переделать в соотвествии с react-router 5 документацией
+перенести ErrContainer внутрь модально формы добавление проекта

Проекты:
Блок с checkbox
- сортировка по:
  дате создания,
  проекту присваивается время истечения todo с наименьшем оствашимся временем
  выполнению:
    кр. цвет - просроченный
    серый цвет - завершенный
    обычный цвет - в процессе

+ отправка по нажатию enter - add projects
+ обработка ошибок для проектов
+ обработку ошибок перенести в reducer
+ проверка title в projects
+ создать проект можно и со страницы projects и со страницы проекта
- пагинация select ?
- сделать select + поиск ?
- redirect  для project на pageNotFound, если id проекта не найден
- дата истечения проекта обновляется, если дата истечения добавляемого task меньше даты истечения проекта

tasks:
-перелистываение списка todos вверх, при добавлении todo
-сделать поиск
-сделать отдельный task input с увеличенным шрифтом ?
-сделать loading для tasks, с фризом формы
-в таск контейнере отключить перключение формы, если происходит loading

-при задании времени истечения todo, автоматически добавляется время истечения
проекта, если новое время истечения todo, больше, чем предыдущее,
то остается предыдущее время истечения

- добавить константы, наверное так будет удобнее

+ форму таймера придется сделать модальной формой
иначе на мобильном будет выглядеть стремно

- для ширины экрана меньше чем 360 px - iphone 4, iphone 5,
сделать отдельные стили для react-datepicker

+ теряется favicon при обновлении страницы на project на production
+ теряется favicon при обновлении страницы на project на develop посмотреть react-script

+ кнопка работает, но не дает ожидаемый результат, выводится только alert // проблема с trimStart

настроить babel-preset-env для safari 9 // не нужно


!!! trimStart не поддреживается IE и IOs

- увеличить все шрифты
+ не работает doubleClick на ipad // замена doubleClick ф-цией
+ при нажатии не таймер удаляется задача
- при обновлении страницы project на ipad и iphone и IE возвращается страница projects //trailing commas - вызывают ошибку в ie и старых сафари (в файле index.html)
на андройд все ок
+ не работают запросы к api в IE // add promise полифил
+ session Storage не работает в ie для localhost, только для удаленных url

-очень тормозит календарь на мобильных девайсах

-добалять полифилы corejs только если браузер ie

- съезжают иконки в ios в кнопках внутри task

- дату истечения лучше хранить в utc формате, т.к.
вне зависимости от часового пояса сервера и клиента
приложение может быть открытов в любом часовом поясе и 
разница во времени считается на Клиенте, поэтому могут возникнуть неполадки

Date.now() - количество миллисекунд, прошедших с 1 января 1970 года 00:00:00 по UTC.

new Date ()
Sat Nov 23 2019 20:48:05 GMT+0300 (Москва, стандартное время)
Sat Nov 23 2019 - дата
20:48:05 - время 
GMT+0300 - часовой пояс

заменить полностью date-fns библиотеку ?

Date.now() === + new Date() === new Date().getTime();

dateAdded
На сервере к каждой новой задаче добавляется dateAdded: new Date();
Дата автоматически устанавливается в UTC
т.е. если задача добавлена в 22:16 по Москве, то она запишется как 
2019-11-23 19:16:23.309 - т.е. с разницей в 3 часа
в Compas дата имеет тип Date и выглядит так: 2019-11-23 19:16:23.309
в MongoShell так ISODate("2019-11-23T19:16:23.309Z")
на Клиент передается в таком виде:
2019-11-23T19:16:23.309Z
2019-11-23 - дата
T - просто разделитель
19:16:23.309 - часы, минуты, секунды, миллисекунды
Z - часовой пояс, Z - означает 0-часовой пояс UTC

вычисления быстрее производить если производить оперции с датами в формате милли секунд, т.е. использовать getTime()

deadline
с Клиента отправляется в виде Date object:
Sat Nov 23 2019 23:00:10 GMT+0300 (Москва, стандартное время)

на сервер приходит в виде строки:
'2019-11-23T20:00:00.095Z' - в формате UTC на 3 часа меньше
далее в виде строки String записывается в БД
и на Клиент отправляется в виде строки
'2019-11-23T20:00:00.095Z'
на данном этапе все ок:
с сервера даты приходят в формате String
все даты в часовом поясе UTC,


